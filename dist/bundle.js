(()=>{"use strict";class t extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.scale=1,this.translateX=0,this.translateY=0,this.isPanning=!1,this.startX=0,this.startY=0,this.draggingPolygon=null,this.dragOffsetX=0,this.dragOffsetY=0,this.colors=["red"],this.shadowRoot.innerHTML='\n                    <style>\n                        :host {\n                            display: flex;\n                            flex-direction: column;\n                            width: 100%;\n                            height: 100%;\n                            background: rgba(25, 25, 35, 0.8);\n                            border-radius: 15px;\n                            overflow: hidden;\n                        }\n                        \n                        .zone {\n                            border: 2px dashed rgba(255, 255, 255, 0.2);\n                            border-radius: 10px;\n                            padding: 15px;\n                            margin: 15px;\n                            position: relative;\n                            box-sizing: border-box;\n                        }\n                        \n                        .zone-header {\n                            position: absolute;\n                            top: 0;\n                            left: 50%;\n                            transform: translateX(-50%);\n                            background: rgba(0, 0, 0, 0.7);\n                            color: white;\n                            padding: 5px 20px;\n                            border-radius: 0 0 10px 10px;\n                            font-size: 1.1rem;\n                            z-index: 10;\n                        }\n                        \n                        .buffer-zone {\n                            height: 20%; /* Увеличено пространство для рабочей зоны */\n                            display: flex;\n                            flex-wrap: wrap;\n                            gap: 15px;\n                            align-items: center;\n                            justify-content: center;\n                            background: rgba(20, 30, 48, 0.6);\n                            overflow: auto;\n                        }\n                        \n                        .workspace-zone {\n                            height: 80%; /* Увеличено пространство для рабочей зоны */\n                            background: rgba(15, 23, 42, 0.7);\n                            overflow: hidden;\n                            position: relative;\n                            padding-bottom: 45px;\n                        }\n                        \n                        .polygon-container {\n                            width: 80px;\n                            height: 80px;\n                            cursor: move;\n                            transition: transform 0.2s ease;\n                        }\n                        \n                        .polygon-container:hover {\n                            transform: scale(1.1);\n                        }\n                        \n                        .polygon-container svg {\n                            width: 100%;\n                            height: 100%;\n                            filter: drop-shadow(0 3px 5px rgba(0, 0, 0, 0.3));\n                        }\n                        \n                        #workspace-svg {\n                            width: 100%;\n                            height: 100%;\n                            background: rgba(10, 15, 30, 0.5);\n                        }\n                        \n                        #viewport {\n                            transform-origin: 0 0;\n                        }\n                        \n                        .axis {\n                            stroke: rgba(255, 255, 255, 0.6);\n                            stroke-width: 1.5;\n                        }\n                        \n                        .grid-line {\n                            stroke: rgba(255, 255, 255, 0.15);\n                            stroke-width: 0.8;\n                        }\n                        \n                        .axis-label {\n                            fill: rgba(255, 255, 255, 0.8);\n                            font-size: 12px;\n                            user-select: none;\n                            font-family: Arial, sans-serif;\n                        }\n                        \n                        .scale-info {\n                            position: absolute;\n                            bottom: 15px;\n                            right: 15px;\n                            background: rgba(0, 0, 0, 0.6);\n                            color: white;\n                            padding: 5px 10px;\n                            border-radius: 5px;\n                            font-size: 14px;\n                        }\n                        \n                        .origin-marker {\n                            fill: #ff5252;\n                            r: 3;\n                        }\n                        \n                        .workspace-polygon {\n                            cursor: move;\n                        }\n                    </style>\n                    \n                    <div class="buffer-zone zone">\n                        <div class="zone-header">Буферная зона</div>\n                    </div>\n                    \n                    <div class="workspace-zone zone">\n                        <div class="zone-header">Рабочая зона</div>\n                        <svg id="workspace-svg">\n                            <rect width="100%" height="100%" fill="rgba(10, 15, 30, 0.5)"></rect>\n                            <g id="viewport"></g>\n                            <g id="axes"></g>\n                        </svg>\n                    </div>\n                ',this.bufferZone=this.shadowRoot.querySelector(".buffer-zone"),this.workspaceZone=this.shadowRoot.querySelector(".workspace-zone"),this.workspaceSvg=this.shadowRoot.querySelector("#workspace-svg"),this.viewport=this.shadowRoot.querySelector("#viewport"),this.axes=this.shadowRoot.querySelector("#axes"),this.initEventListeners(),this.loadState(),this.updateAxes()}initEventListeners(){document.getElementById("createBtn").addEventListener("click",()=>this.createPolygons()),document.getElementById("saveBtn").addEventListener("click",()=>this.saveState()),document.getElementById("resetBtn").addEventListener("click",()=>this.resetState()),this.workspaceSvg.addEventListener("wheel",this.handleWheel.bind(this)),this.workspaceSvg.addEventListener("mousedown",this.startPan.bind(this)),this.workspaceSvg.addEventListener("mousemove",this.handlePan.bind(this)),this.workspaceSvg.addEventListener("mouseup",this.endPan.bind(this)),this.workspaceSvg.addEventListener("mouseleave",this.endPan.bind(this)),this.bufferZone.addEventListener("dragover",this.handleDragOver.bind(this)),this.bufferZone.addEventListener("drop",this.handleBufferDrop.bind(this)),this.workspaceZone.addEventListener("dragover",this.handleDragOver.bind(this)),this.workspaceZone.addEventListener("drop",this.handleWorkspaceDrop.bind(this))}createPolygons(){this.clearBufferZone();const t=Math.floor(16*Math.random())+5;for(let e=0;e<t;e++)this.bufferZone.appendChild(this.generatePolygon())}generatePolygon(){const t=document.createElement("div");t.className="polygon-container",t.draggable=!0;const e="http://www.w3.org/2000/svg",n=document.createElementNS(e,"svg");n.setAttribute("viewBox","0 0 100 100");const s=document.createElementNS(e,"polygon"),r=Math.floor(5*Math.random())+3,a=[];for(let t=0;t<r;t++){const e=t/r*Math.PI*2,n=30+20*Math.random(),s=50+Math.cos(e)*n,i=50+Math.sin(e)*n;a.push(`${s},${i}`)}return s.setAttribute("points",a.join(" ")),s.setAttribute("fill",this.colors[0]),n.appendChild(s),t.appendChild(n),t.addEventListener("dragstart",t=>{t.dataTransfer.setData("text/plain",JSON.stringify({type:"polygon",points:a,color:this.colors[0]}))}),t}handleWheel(t){t.preventDefault();const e=t.deltaY>0?-.1:.1,n=Math.max(.2,Math.min(3,this.scale+e)),s=this.workspaceSvg.getBoundingClientRect(),r=t.clientX-s.left,a=t.clientY-s.top;this.translateX=r-(r-this.translateX)*(n/this.scale),this.translateY=a-(a-this.translateY)*(n/this.scale),this.scale=n,this.updateViewport()}startPan(t){0!==t.button||t.target.closest(".workspace-polygon")||(this.isPanning=!0,this.startX=t.clientX-this.translateX,this.startY=t.clientY-this.translateY,this.workspaceSvg.style.cursor="grabbing")}handlePan(t){if(this.isPanning)this.translateX=t.clientX-this.startX,this.translateY=t.clientY-this.startY,this.updateViewport();else if(this.draggingPolygon){const e=this.workspaceSvg.getBoundingClientRect(),n=(t.clientX-e.left-this.translateX)/this.scale,s=(t.clientY-e.top-this.translateY)/this.scale,r=n-this.dragOffsetX,a=s-this.dragOffsetY;this.draggingPolygon.setAttribute("transform",`translate(${r}, ${a})`)}}endPan(){this.isPanning=!1,this.draggingPolygon=null,this.workspaceSvg.style.cursor="default"}updateViewport(){this.viewport.setAttribute("transform",`\n                    translate(${this.translateX}, ${this.translateY})\n                    scale(${this.scale})\n                `),this.updateAxes()}updateAxes(){const t="http://www.w3.org/2000/svg";this.axes.innerHTML="";const e=this.workspaceSvg.clientWidth,n=this.workspaceSvg.clientHeight,s=document.createElementNS(t,"line");s.setAttribute("class","axis"),s.setAttribute("x1","0"),s.setAttribute("y1",n-50),s.setAttribute("x2",e),s.setAttribute("y2",n-50),this.axes.appendChild(s);const r=document.createElementNS(t,"line");r.setAttribute("class","axis"),r.setAttribute("x1","0"),r.setAttribute("y1","0"),r.setAttribute("x2","0"),r.setAttribute("y2",n),this.axes.appendChild(r);const a=document.createElementNS(t,"circle");a.setAttribute("class","origin-marker"),a.setAttribute("cx","0"),a.setAttribute("cy",n-50),this.axes.appendChild(a);const i=50/this.scale,o=Math.ceil(e/i),l=Math.ceil(n/i);for(let s=1;s<l;s++){const r=n-s*i-50,a=document.createElementNS(t,"line");if(a.setAttribute("class","grid-line"),a.setAttribute("x1","0"),a.setAttribute("y1",r),a.setAttribute("x2",e),a.setAttribute("y2",r),this.axes.appendChild(a),s%2==0||this.scale>1.5){const e=document.createElementNS(t,"text");e.setAttribute("class","axis-label"),e.setAttribute("x","10"),e.setAttribute("y",r-5),e.textContent=Math.round(s*i),this.axes.appendChild(e)}}for(let e=1;e<o;e++){const s=e*i,r=document.createElementNS(t,"line");if(r.setAttribute("class","grid-line"),r.setAttribute("x1",s),r.setAttribute("y1","0"),r.setAttribute("x2",s),r.setAttribute("y2",n),this.axes.appendChild(r),e%2==0||this.scale>1.5){const e=document.createElementNS(t,"text");e.setAttribute("class","axis-label"),e.setAttribute("x",s),e.setAttribute("y",n-30),e.setAttribute("text-anchor","middle"),e.textContent=Math.round(s),this.axes.appendChild(e)}}const c=document.createElementNS(t,"text");c.setAttribute("class","axis-label"),c.setAttribute("x",10),c.setAttribute("y",n-30),c.textContent="0",this.axes.appendChild(c)}handleDragOver(t){t.preventDefault(),t.dataTransfer.dropEffect="move"}handleBufferDrop(t){t.preventDefault();const e=JSON.parse(t.dataTransfer.getData("text/plain"));"polygon"===e.type&&this.bufferZone.appendChild(this.createWorkspacePolygon(e.points,e.color))}handleWorkspaceDrop(t){t.preventDefault();const e=JSON.parse(t.dataTransfer.getData("text/plain"));if("polygon"===e.type){const n=this.createWorkspacePolygon(e.points,e.color,!0),s=this.workspaceSvg.getBoundingClientRect(),r=(t.clientX-s.left-this.translateX)/this.scale,a=(t.clientY-s.top-this.translateY)/this.scale;n.setAttribute("transform",`translate(${r-50}, ${a-50})`),this.viewport.appendChild(n)}}createWorkspacePolygon(t,e,n=!1){const s="http://www.w3.org/2000/svg";if(n){const n=document.createElementNS(s,"g");n.setAttribute("class","workspace-polygon"),n.draggable=!0;const r=document.createElementNS(s,"polygon");return r.setAttribute("points",t.join(" ")),r.setAttribute("fill",e),n.appendChild(r),n.addEventListener("dragstart",n=>{n.dataTransfer.setData("text/plain",JSON.stringify({type:"polygon",points:t,color:e}))}),n.addEventListener("mousedown",t=>{t.stopPropagation();let e=0,s=0;const r=n.getAttribute("transform");if(r){const t=r.match(/translate\(([^,]+),\s*([^)]+)\)/);t&&(e=parseFloat(t[1]),s=parseFloat(t[2]))}const a=this.workspaceSvg.getBoundingClientRect(),i=t.clientX-a.left,o=t.clientY-a.top;this.dragOffsetX=(i-this.translateX)/this.scale-e-50,this.dragOffsetY=(o-this.translateY)/this.scale-s-50,this.draggingPolygon=n}),n}{const n=document.createElement("div");n.className="polygon-container",n.draggable=!0;const r=document.createElementNS(s,"svg");r.setAttribute("viewBox","0 0 100 100");const a=document.createElementNS(s,"polygon");return a.setAttribute("points",t.join(" ")),a.setAttribute("fill",e),r.appendChild(a),n.appendChild(r),n.addEventListener("dragstart",n=>{n.dataTransfer.setData("text/plain",JSON.stringify({type:"polygon",points:t,color:e}))}),n}}saveState(){const t={buffer:[],workspace:[],transform:{scale:this.scale,translateX:this.translateX,translateY:this.translateY}};this.bufferZone.querySelectorAll(".polygon-container").forEach(e=>{const n=e.querySelector("svg").querySelector("polygon");t.buffer.push({points:n.getAttribute("points").split(" "),color:n.getAttribute("fill")})}),this.viewport.querySelectorAll("g").forEach(e=>{const n=e.querySelector("polygon");t.workspace.push({points:n.getAttribute("points").split(" "),color:n.getAttribute("fill"),transform:e.getAttribute("transform")})}),localStorage.setItem("polygonAppState",JSON.stringify(t)),alert("Состояние успешно сохранено!")}loadState(){const t=JSON.parse(localStorage.getItem("polygonAppState"));t&&(this.clearBufferZone(),t.buffer.forEach(t=>{this.bufferZone.appendChild(this.createWorkspacePolygon(t.points,t.color))}),this.viewport.innerHTML="",t.workspace.forEach(t=>{const e=this.createWorkspacePolygon(t.points,t.color,!0);t.transform&&e.setAttribute("transform",t.transform),this.viewport.appendChild(e)}),this.scale=t.transform.scale,this.translateX=t.transform.translateX,this.translateY=t.transform.translateY,this.updateViewport())}resetState(){confirm("Вы уверены, что хотите сбросить все данные?")&&(localStorage.removeItem("polygonAppState"),this.clearBufferZone(),this.viewport.innerHTML="",this.scale=1,this.translateX=0,this.translateY=0,this.updateViewport())}clearBufferZone(){this.bufferZone.querySelectorAll(".polygon-container").forEach(t=>t.remove())}}customElements.define("polygon-app",t),customElements.define("polygon-app",t)})();